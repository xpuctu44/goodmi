#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –ø—Ä–æ–≤–µ—Ä–∫–∏ IP –∞–¥—Ä–µ—Å–æ–≤
"""

import sys
import os
sys.path.append(os.path.dirname(os.path.abspath(__file__)))

from app.database import get_db
from app.routers.attendance import _check_ip_allowed
from fastapi import Request
from unittest.mock import Mock

def test_ip_check():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç –ø—Ä–æ–≤–µ—Ä–∫—É IP –∞–¥—Ä–µ—Å–æ–≤"""
    print("üîç –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø—Ä–æ–≤–µ—Ä–∫–∏ IP –∞–¥—Ä–µ—Å–æ–≤...")
    print("=" * 50)
    
    # –ü–æ–ª—É—á–∞–µ–º —Å–µ—Å—Å–∏—é –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
    db = next(get_db())
    
    # –°–æ–∑–¥–∞–µ–º –º–æ–∫-–æ–±—ä–µ–∫—Ç Request
    def create_mock_request(ip_address):
        request = Mock()
        request.client.host = ip_address
        request.headers = {}
        return request
    
    # –¢–µ—Å—Ç–æ–≤—ã–µ IP –∞–¥—Ä–µ—Å–∞
    test_cases = [
        ("192.168.1.100", True, "IP –∏–∑ —Ä–∞–∑—Ä–µ—à–µ–Ω–Ω–æ–π —Å–µ—Ç–∏ 192.168.1.x"),
        ("192.168.1.50", True, "IP –∏–∑ —Ä–∞–∑—Ä–µ—à–µ–Ω–Ω–æ–π —Å–µ—Ç–∏ 192.168.1.x"),
        ("192.168.1.1", True, "–¢–æ—á–Ω—ã–π IP –∏–∑ —Ä–∞–∑—Ä–µ—à–µ–Ω–Ω–æ–π —Å–µ—Ç–∏"),
        ("192.168.2.100", False, "IP –∏–∑ –¥—Ä—É–≥–æ–π —Å–µ—Ç–∏ 192.168.2.x"),
        ("10.0.0.1", False, "IP –∏–∑ –¥—Ä—É–≥–æ–π —Å–µ—Ç–∏ 10.0.0.x"),
        ("127.0.0.1", False, "–õ–æ–∫–∞–ª—å–Ω—ã–π IP"),
        ("8.8.8.8", False, "–í–Ω–µ—à–Ω–∏–π IP"),
    ]
    
    print("üìã –†–µ–∑—É–ª—å—Ç–∞—Ç—ã —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è:")
    print()
    
    for ip, expected, description in test_cases:
        request = create_mock_request(ip)
        result = _check_ip_allowed(request, db)
        status = "‚úÖ –†–ê–ó–†–ï–®–ï–ù" if result else "‚ùå –ó–ê–ë–õ–û–ö–ò–†–û–í–ê–ù"
        expected_status = "‚úÖ –†–ê–ó–†–ï–®–ï–ù" if expected else "‚ùå –ó–ê–ë–õ–û–ö–ò–†–û–í–ê–ù"
        
        print(f"IP: {ip:<15} | {status:<15} | {description}")
        
        if result == expected:
            print(f"   ‚úÖ –û–∂–∏–¥–∞–µ–º–æ: {expected_status}")
        else:
            print(f"   ‚ùå –û–®–ò–ë–ö–ê: –û–∂–∏–¥–∞–ª–æ—Å—å {expected_status}, –ø–æ–ª—É—á–µ–Ω–æ {status}")
        print()
    
    print("üîß –¢–µ–∫—É—â–∏–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏:")
    print("   ‚Ä¢ –†–∞–∑—Ä–µ—à–µ–Ω–Ω–∞—è —Å–µ—Ç—å: 192.168.1.x")
    print("   ‚Ä¢ –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ä–∞–±–æ—Ç–∞–µ—Ç –ø–æ –ø–µ—Ä–≤—ã–º 3 –æ–∫—Ç–µ—Ç–∞–º")
    print("   ‚Ä¢ –î–ª—è –æ—Ç–∫–ª—é—á–µ–Ω–∏—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —É–¥–∞–ª–∏—Ç–µ –≤—Å–µ IP –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö")

if __name__ == "__main__":
    test_ip_check()
