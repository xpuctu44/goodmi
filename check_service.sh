#!/bin/bash
# –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ä–∞–±–æ—Ç—ã Time Tracker —Å–µ—Ä–≤–∏—Å–∞
# –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: ./check_service.sh

SERVICE_NAME="time-tracker"
HEALTH_URL="http://localhost:8001/health"
LOG_FILE="/var/log/time-tracker/check_$(date +%Y%m%d_%H%M%S).log"

# –¶–≤–µ—Ç–∞ –¥–ª—è –≤—ã–≤–æ–¥–∞
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m' # No Color

# –§—É–Ω–∫—Ü–∏—è –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
log() {
    echo -e "$(date '+%Y-%m-%d %H:%M:%S') - $1" | tee -a "$LOG_FILE"
}

# –§—É–Ω–∫—Ü–∏—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å—Ç–∞—Ç—É—Å–∞ —Å–µ—Ä–≤–∏—Å–∞
check_service_status() {
    if systemctl is-active --quiet "$SERVICE_NAME" 2>/dev/null; then
        echo -e "${GREEN}‚úÖ –°–µ—Ä–≤–∏—Å $SERVICE_NAME –∞–∫—Ç–∏–≤–µ–Ω${NC}"
        return 0
    else
        echo -e "${RED}‚ùå –°–µ—Ä–≤–∏—Å $SERVICE_NAME –Ω–µ –∞–∫—Ç–∏–≤–µ–Ω${NC}"
        return 1
    fi
}

# –§—É–Ω–∫—Ü–∏—è –ø—Ä–æ–≤–µ—Ä–∫–∏ health endpoint
check_health() {
    if curl -s --max-time 10 --head "$HEALTH_URL" >/dev/null 2>&1; then
        echo -e "${GREEN}‚úÖ Health check –ø—Ä–æ–π–¥–µ–Ω${NC}"
        return 0
    else
        echo -e "${RED}‚ùå Health check –Ω–µ –ø—Ä–æ–π–¥–µ–Ω${NC}"
        return 1
    fi
}

# –§—É–Ω–∫—Ü–∏—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø–æ—Ä—Ç–∞
check_port() {
    if netstat -tlnp 2>/dev/null | grep -q ":8001 "; then
        echo -e "${GREEN}‚úÖ –ü–æ—Ä—Ç 8001 —Å–ª—É—à–∞–µ—Ç—Å—è${NC}"
        return 0
    else
        echo -e "${RED}‚ùå –ü–æ—Ä—Ç 8001 –Ω–µ —Å–ª—É—à–∞–µ—Ç—Å—è${NC}"
        return 1
    fi
}

# –§—É–Ω–∫—Ü–∏—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø—Ä–æ—Ü–µ—Å—Å–æ–≤
check_processes() {
    PYTHON_PROCESSES=$(pgrep -f "python.*cloud_deploy.py" | wc -l)
    if [ "$PYTHON_PROCESSES" -gt 0 ]; then
        echo -e "${GREEN}‚úÖ –ù–∞–π–¥–µ–Ω–æ $PYTHON_PROCESSES Python –ø—Ä–æ—Ü–µ—Å—Å–∞(–æ–≤)${NC}"
        return 0
    else
        echo -e "${RED}‚ùå Python –ø—Ä–æ—Ü–µ—Å—Å—ã –Ω–µ –Ω–∞–π–¥–µ–Ω—ã${NC}"
        return 1
    fi
}

# –§—É–Ω–∫—Ü–∏—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è —Ä–µ—Å—É—Ä—Å–æ–≤
check_resources() {
    echo -e "${BLUE}üìä –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ —Ä–µ—Å—É—Ä—Å–æ–≤:${NC}"

    # CPU
    CPU_USAGE=$(top -bn1 | grep "Cpu(s)" | sed "s/.*, *\([0-9.]*\)%* id.*/\1/" | awk '{print 100 - $1}')
    echo -e "   CPU: ${YELLOW}$(printf "%.1f" $CPU_USAGE)%${NC}"

    # –ü–∞–º—è—Ç—å
    MEM_INFO=$(free | grep Mem)
    MEM_TOTAL=$(echo $MEM_INFO | awk '{print $2}')
    MEM_USED=$(echo $MEM_INFO | awk '{print $3}')
    MEM_PERCENT=$((MEM_USED * 100 / MEM_TOTAL))
    echo -e "   –ü–∞–º—è—Ç—å: ${YELLOW}$MEM_PERCENT%${NC} ($((MEM_USED/1024))MB –∏–∑ $((MEM_TOTAL/1024))MB)"

    # –î–∏—Å–∫
    DISK_USAGE=$(df / | tail -1 | awk '{print $5}' | sed 's/%//')
    echo -e "   –î–∏—Å–∫: ${YELLOW}$DISK_USAGE%${NC}"
}

# –§—É–Ω–∫—Ü–∏—è –ø–æ–∫–∞–∑–∞ —Å—Ç–∞—Ç—É—Å–∞ systemd
show_systemd_status() {
    echo -e "${BLUE}üîß –°—Ç–∞—Ç—É—Å systemd —Å–µ—Ä–≤–∏—Å–∞:${NC}"
    systemctl status "$SERVICE_NAME" --no-pager -l 2>/dev/null || echo "–°–µ—Ä–≤–∏—Å –Ω–µ –Ω–∞–π–¥–µ–Ω"
}

# –§—É–Ω–∫—Ü–∏—è –ø–æ–∫–∞–∑–∞ –ø–æ—Å–ª–µ–¥–Ω–∏—Ö –ª–æ–≥–æ–≤
show_recent_logs() {
    echo -e "${BLUE}üìù –ü–æ—Å–ª–µ–¥–Ω–∏–µ –ª–æ–≥–∏ —Å–µ—Ä–≤–∏—Å–∞:${NC}"
    journalctl -u "$SERVICE_NAME" -n 10 --no-pager 2>/dev/null || echo "–õ–æ–≥–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã"
}

# –û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è
main() {
    echo -e "${BLUE}üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ä–∞–±–æ—Ç—ã Time Tracker$(date '+%Y-%m-%d %H:%M:%S')${NC}"
    echo "=================================================="

    # –°–æ–∑–¥–∞–Ω–∏–µ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ –¥–ª—è –ª–æ–≥–æ–≤
    mkdir -p /var/log/time-tracker 2>/dev/null

    # –í—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –ø—Ä–æ–≤–µ—Ä–æ–∫
    local all_checks_passed=true

    log "–ù–∞—á–∞–ª–æ –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å–µ—Ä–≤–∏—Å–∞"

    if ! check_service_status; then
        all_checks_passed=false
    fi

    if ! check_port; then
        all_checks_passed=false
    fi

    if ! check_health; then
        all_checks_passed=false
    fi

    if ! check_processes; then
        all_checks_passed=false
    fi

    echo
    check_resources
    echo

    if [ "$1" = "--full" ]; then
        show_systemd_status
        echo
        show_recent_logs
        echo
    fi

    # –ò—Ç–æ–≥–æ–≤—ã–π —Å—Ç–∞—Ç—É—Å
    echo "=================================================="
    if $all_checks_passed; then
        log "‚úÖ –í—Å–µ –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø—Ä–æ–π–¥–µ–Ω—ã —É—Å–ø–µ—à–Ω–æ"
        echo -e "${GREEN}üéâ –í—Å–µ –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø—Ä–æ–π–¥–µ–Ω—ã —É—Å–ø–µ—à–Ω–æ!${NC}"
        exit 0
    else
        log "‚ùå –ù–µ–∫–æ—Ç–æ—Ä—ã–µ –ø—Ä–æ–≤–µ—Ä–∫–∏ –Ω–µ –ø—Ä–æ–π–¥–µ–Ω—ã"
        echo -e "${RED}‚ö†Ô∏è  –ù–µ–∫–æ—Ç–æ—Ä—ã–µ –ø—Ä–æ–≤–µ—Ä–∫–∏ –Ω–µ –ø—Ä–æ–π–¥–µ–Ω—ã${NC}"
        echo -e "${YELLOW}üí° –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏:${NC}"
        echo "   - –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ª–æ–≥–∏: journalctl -u $SERVICE_NAME -f"
        echo "   - –ü–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç–µ —Å–µ—Ä–≤–∏—Å: sudo systemctl restart $SERVICE_NAME"
        echo "   - –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é: sudo systemctl status $SERVICE_NAME"
        exit 1
    fi
}

# –û–±—Ä–∞–±–æ—Ç–∫–∞ –∞—Ä–≥—É–º–µ–Ω—Ç–æ–≤
case "$1" in
    --help|-h)
        echo "–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: $0 [–æ–ø—Ü–∏–∏]"
        echo ""
        echo "–û–ø—Ü–∏–∏:"
        echo "  --full     –ü–æ–ª–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ —Å –ª–æ–≥–∞–º–∏ –∏ —Å—Ç–∞—Ç—É—Å–æ–º systemd"
        echo "  --help     –ü–æ–∫–∞–∑–∞—Ç—å —ç—Ç—É —Å–ø—Ä–∞–≤–∫—É"
        echo ""
        echo "–ü—Ä–∏–º–µ—Ä—ã:"
        echo "  $0              –ë—ã—Å—Ç—Ä–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞"
        echo "  $0 --full       –ü–æ–ª–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞"
        exit 0
        ;;
    *)
        main "$1"
        ;;
esac